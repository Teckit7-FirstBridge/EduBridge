/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v1/courses/{courseId}/videos/{id}/{writer_id}": {
    /** 강의 수정 */
    put: operations["modifyVideo"];
    /** 강의 삭제 */
    delete: operations["deleteVideo"];
  };
  "/api/v1/report/post/{postId}": {
    /** 글 신고 생성 */
    post: operations["createPostReport"];
  };
  "/api/v1/report/course/{courseId}": {
    /** 강좌 신고 생성 */
    post: operations["createCourseReport"];
  };
  "/api/v1/enroll/{courseId}": {
    /** 수강 등록 */
    post: operations["create"];
  };
  "/api/v1/courses/{courseId}/videos/{writer_id}": {
    /** 강의 등록 */
    post: operations["createVideo"];
  };
  "/api/v1/report/post": {
    /** 글 신고 목록 조회 */
    get: operations["reportedPostList"];
  };
  "/api/v1/report/course": {
    /** 강좌 신고 목록 조회 */
    get: operations["reportedCourseList"];
  };
  "/api/v1/report/all": {
    /** 전체 신고 목록 조회 */
    get: operations["reportedAllList"];
  };
  "/api/v1/point/{memberId}": {
    /** 포인트 목록 */
    get: operations["getPoints"];
  };
  "/api/v1/point/attend": {
    /** 출석 체크 목록 */
    get: operations["getAttend"];
  };
  "/api/v1/home": {
    /** 홈화면 최신 강좌 N개조회 */
    get: operations["getPosts"];
  };
  "/api/v1/enroll": {
    /** 수업 목록 조회 */
    get: operations["getEnrollList"];
  };
  "/api/v1/courses/{courseId}/videos": {
    /** 강의 리스트 */
    get: operations["getVideos"];
  };
  "/api/v1/courses/{courseId}/videos/{id}": {
    /** 특정 강의 */
    get: operations["getVideos_1"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CourseEnroll: {
      /** Format: int64 */
      id?: number;
      /** Format: date-time */
      createDate?: string;
    };
    GrantedAuthority: {
      authority?: string;
    };
    Member: {
      /** Format: int64 */
      id?: number;
      /** Format: date-time */
      createDate?: string;
      /** Format: int32 */
      enrollCount?: number;
      username?: string;
      password?: string;
      nickname?: string;
      /** Format: int32 */
      point?: number;
      report?: boolean;
      refreshToken?: string;
      profileImgUrl?: string;
      visitedToday?: boolean;
      /** Format: int32 */
      dailyGoal?: number;
      /** Format: int32 */
      dailyAchievement?: number;
      uuid?: string;
      courseEnrollList?: components["schemas"]["CourseEnroll"][];
      name?: string;
      authoritiesAsStringList?: string[];
      authorities?: components["schemas"]["GrantedAuthority"][];
      profileImgUrlOrDefault?: string;
    };
    SummaryNoteDto: {
      /** Format: int64 */
      id?: number;
      /** Format: date-time */
      createDate?: string;
      member?: components["schemas"]["Member"];
      content?: string;
      /** Format: int64 */
      score?: number;
      /** Format: int64 */
      courseId?: number;
      /** Format: int64 */
      videoId?: number;
      courseName?: string;
      title?: string;
      pass?: boolean;
    };
    VideoDto: {
      /** Format: int64 */
      id: number;
      url: string;
      overView?: string;
      imgUrl: string;
      /** Format: int64 */
      courseId: number;
      summaryNotes: components["schemas"]["SummaryNoteDto"][];
      keywords: string;
      title: string;
    };
    RsDataVideoDto: {
      resultCode: string;
      /** Format: int32 */
      statusCode: number;
      msg: string;
      data: components["schemas"]["VideoDto"];
      fail: boolean;
      success: boolean;
    };
    CreateReportDto: {
      reportReason: string;
      /** Format: int64 */
      materialId: number;
    };
    RsDataCreateReportDto: {
      resultCode: string;
      /** Format: int32 */
      statusCode: number;
      msg: string;
      data: components["schemas"]["CreateReportDto"];
      fail: boolean;
      success: boolean;
    };
    RsDataVoid: {
      resultCode: string;
      /** Format: int32 */
      statusCode: number;
      msg: string;
      data: Record<string, never>;
      fail: boolean;
      success: boolean;
    };
    CreateVideoDto: {
      url: string;
      overView: string;
      /** Format: int64 */
      courseId?: number;
      imgUrl: string;
      keywords: string;
      title: string;
    };
    RsDataCreateVideoDto: {
      resultCode: string;
      /** Format: int32 */
      statusCode: number;
      msg: string;
      data: components["schemas"]["CreateVideoDto"];
      fail: boolean;
      success: boolean;
    };
    GetReportList: {
      itemPage?: components["schemas"]["PageDtoReportDto"];
    };
    PageDtoReportDto: {
      /** Format: int64 */
      totalElementsCount: number;
      /** Format: int64 */
      pageElementsCount: number;
      /** Format: int64 */
      totalPagesCount: number;
      /** Format: int32 */
      number: number;
      content: components["schemas"]["ReportDto"][];
    };
    ReportDto: {
      /** Format: int64 */
      id: number;
      /** Format: date-time */
      createDate: string;
      reportReason: string;
      /** Format: int64 */
      materialId: number;
    };
    RsDataGetReportList: {
      resultCode: string;
      /** Format: int32 */
      statusCode: number;
      msg: string;
      data: components["schemas"]["GetReportList"];
      fail: boolean;
      success: boolean;
    };
    PointDto: {
      /** Format: int64 */
      id: number;
      /** Format: date-time */
      createDate: string;
      content: string;
      /** Format: int64 */
      ownerId: number;
      /** Format: int32 */
      amount: number;
    };
    RsDataListPointDto: {
      resultCode: string;
      /** Format: int32 */
      statusCode: number;
      msg: string;
      data: components["schemas"]["PointDto"][];
      fail: boolean;
      success: boolean;
    };
    AttendDto: {
      /** Format: date-time */
      createDate: string;
    };
    RsDataListAttendDto: {
      resultCode: string;
      /** Format: int32 */
      statusCode: number;
      msg: string;
      data: components["schemas"]["AttendDto"][];
      fail: boolean;
      success: boolean;
    };
    CourseDto: {
      /** Format: int64 */
      id?: number;
      title?: string;
      notice?: string;
      imgUrl?: string;
      overView?: string;
      /** Format: int32 */
      price?: number;
      /** Format: int32 */
      voteCount?: number;
      likedByCurrentUser?: boolean;
      /** Format: int32 */
      videoCount?: number;
      confirm?: boolean;
      /** Format: int32 */
      enrollCount?: number;
      writer?: components["schemas"]["Member"];
      hashtags?: string;
    };
    GetPostsResponseBody: {
      items: components["schemas"]["CourseDto"][];
    };
    RsDataGetPostsResponseBody: {
      resultCode: string;
      /** Format: int32 */
      statusCode: number;
      msg: string;
      data: components["schemas"]["GetPostsResponseBody"];
      fail: boolean;
      success: boolean;
    };
    CourseEnrollDto: {
      /** Format: int64 */
      courseId?: number;
      title?: string;
      imgUrl?: string;
      /** Format: int32 */
      price?: number;
    };
    GetCourseEnrollResponsebody: {
      items: components["schemas"]["CourseEnrollDto"][];
    };
    RsDataGetCourseEnrollResponsebody: {
      resultCode: string;
      /** Format: int32 */
      statusCode: number;
      msg: string;
      data: components["schemas"]["GetCourseEnrollResponsebody"];
      fail: boolean;
      success: boolean;
    };
    RsDataListVideoDto: {
      resultCode: string;
      /** Format: int32 */
      statusCode: number;
      msg: string;
      data: components["schemas"]["VideoDto"][];
      fail: boolean;
      success: boolean;
    };
    Empty: Record<string, never>;
    RsDataEmpty: {
      resultCode: string;
      /** Format: int32 */
      statusCode: number;
      msg: string;
      data: components["schemas"]["Empty"];
      fail: boolean;
      success: boolean;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** 강의 수정 */
  modifyVideo: {
    parameters: {
      path: {
        courseId: number;
        writer_id: number;
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["VideoDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataVideoDto"];
        };
      };
    };
  };
  /** 강의 삭제 */
  deleteVideo: {
    parameters: {
      path: {
        courseId: number;
        id: number;
        writer_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataEmpty"];
        };
      };
    };
  };
  /** 글 신고 생성 */
  createPostReport: {
    parameters: {
      path: {
        postId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateReportDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataCreateReportDto"];
        };
      };
    };
  };
  /** 강좌 신고 생성 */
  createCourseReport: {
    parameters: {
      path: {
        courseId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateReportDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataCreateReportDto"];
        };
      };
    };
  };
  /** 수강 등록 */
  create: {
    parameters: {
      path: {
        courseId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataVoid"];
        };
      };
    };
  };
  /** 강의 등록 */
  createVideo: {
    parameters: {
      path: {
        courseId: number;
        writer_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateVideoDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataCreateVideoDto"];
        };
      };
    };
  };
  /** 글 신고 목록 조회 */
  reportedPostList: {
    parameters: {
      query?: {
        page?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataGetReportList"];
        };
      };
    };
  };
  /** 강좌 신고 목록 조회 */
  reportedCourseList: {
    parameters: {
      query?: {
        page?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataGetReportList"];
        };
      };
    };
  };
  /** 전체 신고 목록 조회 */
  reportedAllList: {
    parameters: {
      query?: {
        page?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataGetReportList"];
        };
      };
    };
  };
  /** 포인트 목록 */
  getPoints: {
    parameters: {
      path: {
        memberId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataListPointDto"];
        };
      };
    };
  };
  /** 출석 체크 목록 */
  getAttend: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataListAttendDto"];
        };
      };
    };
  };
  /** 홈화면 최신 강좌 N개조회 */
  getPosts: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["RsDataGetPostsResponseBody"];
        };
      };
    };
  };
  /** 수업 목록 조회 */
  getEnrollList: {
    parameters: {
      query?: {
        page?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataGetCourseEnrollResponsebody"];
        };
      };
    };
  };
  /** 강의 리스트 */
  getVideos: {
    parameters: {
      path: {
        courseId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataListVideoDto"];
        };
      };
    };
  };
  /** 특정 강의 */
  getVideos_1: {
    parameters: {
      path: {
        courseId: number;
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RsDataVideoDto"];
        };
      };
    };
  };
}
